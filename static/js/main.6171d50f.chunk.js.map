{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","props","state","markdown","placeholder","this","setState","className","Container","top","Row","Col","class","href","target","bottom","Form","Group","controlId","Label","Control","as","rows","value","onChange","e","updateMarkdown","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAOIA,EAASC,EAAQ,IAEAC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAUC,GAHK,E,2DAOJD,GACbE,KAAKC,SAAS,CAAEH,e,+BAGR,IAAD,OAEP,OACE,qBAAKI,UAAU,MAAf,SAEA,eAACC,EAAA,EAAD,CAAWD,UAAU,OAArB,UACE,eAAC,IAAD,CAAQE,KAAG,EAAX,UACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKJ,UAAU,mBAAf,SAAkC,oBAAIA,UAAU,QAAd,oCAGpC,cAACG,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAKJ,UAAU,8BAAf,SACA,wDACiB,mBAAGK,MAAM,iBAD1B,OACkD,IAClD,mBAAGC,KAAK,8BAA8BC,OAAO,SAA7C,SACE,sBAAMP,UAAU,QAAhB,qCAOF,cAAC,IAAD,CAAQQ,QAAM,EAAd,SACA,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKJ,UAAU,kBAAf,SACC,eAACS,EAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,UACA,cAACF,EAAA,EAAKG,MAAN,UAAY,oBAAIZ,UAAU,QAAd,qBACZ,cAACS,EAAA,EAAKI,QAAN,CACEC,GAAG,WACHC,KAAM,GACNC,MAAOlB,KAAKH,MAAMC,SAClBqB,SAAU,SAACC,GACV,EAAKC,eAAeD,EAAEX,OAAOS,eAIhC,eAACZ,EAAA,EAAD,CAAKJ,UAAU,kBAAf,UACA,oBAAIA,UAAU,aAAd,oBACA,qBAAKA,UAAU,yBACVoB,wBAAyB,CACvBC,OAAQ9B,EAAOO,KAAKH,MAAMC,8B,GArDX0B,IAAMC,WAkEjC1B,EAAW,wTC/DF2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6171d50f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Bounce from 'react-reveal/Bounce';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form'\nlet marked = require(\"marked\");\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: placeholder,\n    };\n  }\n\n  updateMarkdown(markdown) {\n    this.setState({ markdown });\n  }\n\n  render() {     \n\n    return (\n      <div className=\"App\">\n          \n      <Container className=\"mt-5\">\n        <Bounce top>\n        <Row>\n          <Col className=\"text-center mt-5\"><h1 className=\"title\">Markdown Previewer</h1></Col>\n        </Row>\n\n        <Row>\n        <Col className=\"text-white text-center mb-5\">\n        <h6>\n        â“’ 2020 Made with <i class=\"far fa-heart\"></i> by {\" \"}\n        <a href=\"https://karen-developer.com\" target=\"_blank\">\n          <span className=\"karen\">Karen Chang</span>\n        </a>\n        </h6>\n        </Col>\n        </Row>\n        </Bounce>\n\n        <Bounce bottom>     \n        <Row>\n          <Col className=\"text-center m-2\">\n           <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n           <Form.Label><h4 className=\"title\">Input</h4></Form.Label>\n           <Form.Control \n             as=\"textarea\" \n             rows={20} \n             value={this.state.markdown}\n             onChange={(e) => \n             {this.updateMarkdown(e.target.value);}}/>\n           </Form.Group>\n          </Col>\n\n           <Col className=\"text-center m-2\">\n           <h4 className=\"title mb-3\">Output</h4>\n           <div className=\"text-left output-style\"               \n                dangerouslySetInnerHTML={{\n                  __html: marked(this.state.markdown),\n                }}\n          ></div>            \n          </Col>\n        </Row> \n        </Bounce>               \n      </Container>\n     \n      </div>\n    );\n  }\n}\n\nconst placeholder = `## Links\n\nWelcome to visit [karen-developer.com](https://karen-developer.com)\n\n## Images\n\n![freeCodeCamp Logo](https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/FreeCodeCamp_logo.png/375px-FreeCodeCamp_logo.png)\n\n## Code\n\n    // Developer Comments\n    Eat\n    Code\n    Sleep\n    Repeat\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}